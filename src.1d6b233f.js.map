{"version":3,"sources":["index.js"],"names":["CountdownTimer","selector","targetDate","document","querySelector","Date","intervalId","setInterval","currentTime","remainingTime","timeConfig","timeReplaceText","stopTimer","days","Math","floor","hours","mins","secs","refs","minutes","seconds","textContent","pad","clearInterval","value","String","padStart","countdownTimer","startTimer"],"mappings":";AAyDA,SAAA,EAAA,EAAA,GAAA,KAAA,aAAA,GAAA,MAAA,IAAA,UAAA,qCAAA,SAAA,EAAA,EAAA,GAAA,IAAA,IAAA,EAAA,EAAA,EAAA,EAAA,OAAA,IAAA,CAAA,IAAA,EAAA,EAAA,GAAA,EAAA,WAAA,EAAA,aAAA,EAAA,EAAA,cAAA,EAAA,UAAA,IAAA,EAAA,UAAA,GAAA,OAAA,eAAA,EAAA,EAAA,IAAA,IAAA,SAAA,EAAA,EAAA,EAAA,GAAA,OAAA,GAAA,EAAA,EAAA,UAAA,GAAA,GAAA,EAAA,EAAA,GAAA,EAzDMA,IAAAA,EAAAA,WACQC,SAAAA,EAAAA,EAAUC,GAAY,EAAA,KAAA,GAC3BD,KAAAA,SAAWE,SAASC,cAAcH,GAClCC,KAAAA,WAAa,IAAIG,KAAKH,GAsD/B,OAAA,EAAA,EAAA,CAAA,CAAA,IAAA,aAnDe,MAAA,WAAA,IAAA,EAAA,KACNI,KAAAA,WAAaC,YAAY,WAC5B,EAAKC,YAAc,IAAIH,KACvB,EAAKI,cAAgB,EAAKP,WAAa,EAAKM,YAC5C,EAAKE,aAAc,EAAKC,kBACpB,EAAKF,cAAgB,GACvB,EAAKG,aAEN,OA2CP,CAAA,IAAA,aAxCe,MAAA,WACNC,KAAAA,KAAOC,KAAKC,MAAM,KAAKN,cAAiB,OACxCO,KAAAA,MAAQF,KAAKC,MACf,KAAKN,cAAiB,MAAyB,MAE7CQ,KAAAA,KAAOH,KAAKC,MACd,KAAKN,cAAiB,KAAoB,KAExCS,KAAAA,KAAOJ,KAAKC,MAAO,KAAKN,cAAiB,IAAc,OAgChE,CAAA,IAAA,kBA7BoB,MAAA,WACXU,KAAAA,KAAO,CACVN,KAAMV,SAASC,cAAc,sBAC7BY,MAAOb,SAASC,cAAc,uBAC9BgB,QAASjB,SAASC,cAAc,sBAChCiB,QAASlB,SAASC,cAAc,uBAE7Be,KAAAA,KAAKN,KAAKS,YAAc,KAAKC,IAAI,KAAKV,MACtCM,KAAAA,KAAKH,MAAMM,YAAc,KAAKC,IAAI,KAAKP,OACvCG,KAAAA,KAAKC,QAAQE,YAAc,KAAKC,IAAI,KAAKN,MACzCE,KAAAA,KAAKE,QAAQC,YAAc,KAAKC,IAAI,KAAKL,QAmBlD,CAAA,IAAA,YAjBc,MAAA,WACVM,cAAc,KAAKlB,YACdG,KAAAA,cAAgB,EAChBC,KAAAA,WAAW,KAAKD,eAChBE,KAAAA,gBAAgB,KAAKF,iBAa9B,CAAA,IAAA,MAVMgB,MAAAA,SAAAA,GACKC,OAAAA,OAAOD,GAAOE,SAAS,EAAG,SASrC,EAzDM3B,GAoDA4B,EAAiB,IAAI5B,EACzB,WACA,4BAEF4B,EAAeC","file":"src.1d6b233f.js","sourceRoot":"..\\src","sourcesContent":["class CountdownTimer {\r\n  constructor(selector, targetDate) {\r\n    this.selector = document.querySelector(selector);\r\n    this.targetDate = new Date(targetDate);\r\n  }\r\n\r\n  startTimer() {\r\n    this.intervalId = setInterval(() => {\r\n      this.currentTime = new Date();\r\n      this.remainingTime = this.targetDate - this.currentTime;\r\n      this.timeConfig(), this.timeReplaceText();\r\n      if (this.remainingTime < 0) {\r\n        this.stopTimer();\r\n      }\r\n    }, 1000);\r\n  }\r\n\r\n  timeConfig() {\r\n    this.days = Math.floor(this.remainingTime / (1000 * 60 * 60 * 24));\r\n    this.hours = Math.floor(\r\n      (this.remainingTime % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60),\r\n    );\r\n    this.mins = Math.floor(\r\n      (this.remainingTime % (1000 * 60 * 60)) / (1000 * 60),\r\n    );\r\n    this.secs = Math.floor((this.remainingTime % (1000 * 60)) / 1000);\r\n  }\r\n\r\n  timeReplaceText() {\r\n    this.refs = {\r\n      days: document.querySelector(' [data-value=days]'),\r\n      hours: document.querySelector(' [data-value=hours]'),\r\n      minutes: document.querySelector(' [data-value=mins]'),\r\n      seconds: document.querySelector(' [data-value=secs]'),\r\n    };\r\n    this.refs.days.textContent = this.pad(this.days);\r\n    this.refs.hours.textContent = this.pad(this.hours);\r\n    this.refs.minutes.textContent = this.pad(this.mins);\r\n    this.refs.seconds.textContent = this.pad(this.secs);\r\n  }\r\n  stopTimer() {\r\n    clearInterval(this.intervalId);\r\n    this.remainingTime = 0;\r\n    this.timeConfig(this.remainingTime);\r\n    this.timeReplaceText(this.remainingTime);\r\n  }\r\n\r\n  pad(value) {\r\n    return String(value).padStart(2, '0');\r\n  }\r\n}\r\n\r\nconst countdownTimer = new CountdownTimer(\r\n  '#timer-1',\r\n  'December 25, 2020, 16:01',\r\n);\r\ncountdownTimer.startTimer();\r\n//\r\n"]}